name: Build Image and Push to ECR

on:
  push:
    branches:
      - "main"

env:
  BUILD_REGISTRY: "035243212545.dkr.ecr.ap-south-1.amazonaws.com/curefit/prod/customer-query-resolver"

jobs:
  build:
    runs-on: [arc-runner-kubernetes-ci-arm]
    container:
      image: 035243212545.dkr.ecr.ap-south-1.amazonaws.com/kaniko-github-actions:0.0.8-arm
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up variables
        id: vars
        run: |
          echo "BUILD_NUMBER=${{ github.run_number }}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${{ github.ref_name }}" >> $GITHUB_ENV
          PREVIEW_VERSION="${{ github.run_number }}-${{ github.ref_name }}"
          echo "PREVIEW_VERSION=${PREVIEW_VERSION}" >> $GITHUB_ENV
          VERSION="${{ github.run_number }}-${{ github.ref_name }}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
       

      - name: Build and push container test
        run: |
          pwd
          # Write config file, change to your destination registry
          AUTH=$(echo -n ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} | base64)
          echo "{\"auths\": {\"ghcr.io\": {\"auth\": \"${AUTH}\"}}}" > /kaniko/.docker/config.json

          # Configure git
          export GIT_USERNAME="actions-pipeline"
          export GIT_PASSWORD="${{ secrets.GIT_PASSWORD }}"
          

          /kaniko/executor --dockerfile="Dockerfile" \
            --context="${{ github.repositoryUrl }}#${{ github.ref }}#${{ github.sha }}" \
            --build-arg NPM_TOKEN="${{ secrets.NPM_TOKEN }}" \
            --build-arg GITHUB_NPM_TOKEN="${{ secrets.HUB_NPM_TOKEN }}" \
            --build-arg MODULE_NAME="src.main" \
            --build-arg VARIABLE_NAME="app" \
            --build-arg PORT="8000" \
            --destination="${{ env.BUILD_REGISTRY }}:${{ env.PREVIEW_VERSION }}"



      - name: Trigger Spinnaker
        env:
          pipeline_name: "customer-query-resolver-prod"
        run: |
          /busybox/curl "https://spinnaker-gate.curefit.co/webhooks/webhook/${{ env.pipeline_name }}" \
          -X POST \
          -H "Content-Type: application/json" \
          -d '{"parameters": {"tag": "${{ env.VERSION }}", "registry": "${{ env.BUILD_REGISTRY }}" }}'      
